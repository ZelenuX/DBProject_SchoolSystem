package ru.school.database.ui.utils;

import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.grid.Grid;
import com.vaadin.flow.component.notification.Notification;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import org.apache.commons.lang3.ArrayUtils;
import org.springframework.data.jpa.repository.JpaRepository;

import java.util.List;

public class CRUDForm<Entity> extends VerticalLayout {
    private Class<Entity> entityClass;
    private JpaRepository repository;
    private Grid<Entity> grid;
    private HorizontalLayout buttonPanel;
    private Button refreshButton, addButton;

    private void buildGrid(Class<Entity> entityClass, String autoGeneratedIdColumn, String... otherCols){
        this.grid = new Grid<>(entityClass);
        grid.setSizeFull();
        if (autoGeneratedIdColumn != null) {
            grid.setColumns(ArrayUtils.addAll(new String[]{autoGeneratedIdColumn}, otherCols));
        }
        else {
            grid.setColumns(otherCols);
        }
        grid.setItems(repository.findAll());
    }
    private void buildRefreshButton(){
        refreshButton = new Button("refresh", event -> {
            List items = repository.findAll();
            grid.setItems(items);
            Notification.show("Loaded " + items.size() + " items.");
        });
    }
    private void buildAddButton(String... otherCols){
        AddWindow addWindow = new AddWindow<Entity>(entityClass, otherCols);
        addButton = new Button("add", event -> {
            addWindow.open();
        });
    }
    private void buildButtonPanel(String autoGeneratedIdColumn, String... otherCols){
        buttonPanel = new HorizontalLayout();
        buttonPanel.setWidthFull();

        buildRefreshButton();
        buildAddButton(otherCols);
        buttonPanel.add(refreshButton, addButton);
    }

    public CRUDForm(Class<Entity> entityClass, JpaRepository repository, String autoGeneratedIdColumn, String... otherCols){
        this.entityClass = entityClass;
        this.repository = repository;
        buildGrid(entityClass, autoGeneratedIdColumn, otherCols);
        buildButtonPanel(autoGeneratedIdColumn, otherCols);

        this.setSizeFull();
        this.add(buttonPanel);
        this.add(grid);
    }
}
